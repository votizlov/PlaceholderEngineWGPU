# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.23

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: PlaceholderEngineWGPU
# Configurations: 
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5

# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = E$:/git_projects/PlaceholderEngineWGPU/build-web/

#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web && "C:\Program Files\CMake\bin\cmake-gui.exe" -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web && "C:\Program Files\CMake\bin\cmake.exe" --regenerate-during-build -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# E:/git_projects/PlaceholderEngineWGPU/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for edit_cache

build webgpu/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\webgpu && "C:\Program Files\CMake\bin\cmake-gui.exe" -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build webgpu/edit_cache: phony webgpu/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build webgpu/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\webgpu && "C:\Program Files\CMake\bin\cmake.exe" --regenerate-during-build -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build webgpu/rebuild_cache: phony webgpu/CMakeFiles/rebuild_cache.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# E:/git_projects/PlaceholderEngineWGPU/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for STATIC_LIBRARY target glfw3webgpu


#############################################
# Order-only phony target for glfw3webgpu

build cmake_object_order_depends_target_glfw3webgpu: phony || glfw3webgpu/CMakeFiles/glfw3webgpu.dir

build glfw3webgpu/CMakeFiles/glfw3webgpu.dir/glfw3webgpu.c.o: C_COMPILER__glfw3webgpu_ E$:/git_projects/PlaceholderEngineWGPU/glfw3webgpu/glfw3webgpu.c || cmake_object_order_depends_target_glfw3webgpu
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = glfw3webgpu\CMakeFiles\glfw3webgpu.dir\glfw3webgpu.c.o.d
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/glfw3webgpu/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = glfw3webgpu\CMakeFiles\glfw3webgpu.dir
  OBJECT_FILE_DIR = glfw3webgpu\CMakeFiles\glfw3webgpu.dir


# =============================================================================
# Link build statements for STATIC_LIBRARY target glfw3webgpu


#############################################
# Link the static library glfw3webgpu\libglfw3webgpu.a

build glfw3webgpu/libglfw3webgpu.a: C_STATIC_LIBRARY_LINKER__glfw3webgpu_ glfw3webgpu/CMakeFiles/glfw3webgpu.dir/glfw3webgpu.c.o
  OBJECT_DIR = glfw3webgpu\CMakeFiles\glfw3webgpu.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = glfw3webgpu\libglfw3webgpu.a
  TARGET_PDB = glfw3webgpu.a.dbg


#############################################
# Utility command for edit_cache

build glfw3webgpu/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\glfw3webgpu && "C:\Program Files\CMake\bin\cmake-gui.exe" -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build glfw3webgpu/edit_cache: phony glfw3webgpu/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build glfw3webgpu/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\glfw3webgpu && "C:\Program Files\CMake\bin\cmake.exe" --regenerate-during-build -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build glfw3webgpu/rebuild_cache: phony glfw3webgpu/CMakeFiles/rebuild_cache.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# E:/git_projects/PlaceholderEngineWGPU/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for STATIC_LIBRARY target imgui


#############################################
# Order-only phony target for imgui

build cmake_object_order_depends_target_imgui: phony || imgui/CMakeFiles/imgui.dir

build imgui/CMakeFiles/imgui.dir/backends/imgui_impl_wgpu.cpp.o: CXX_COMPILER__imgui_ E$:/git_projects/PlaceholderEngineWGPU/imgui/backends/imgui_impl_wgpu.cpp || cmake_object_order_depends_target_imgui
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = imgui\CMakeFiles\imgui.dir\backends\imgui_impl_wgpu.cpp.o.d
  FLAGS = -std=gnu++11
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  OBJECT_FILE_DIR = imgui\CMakeFiles\imgui.dir\backends

build imgui/CMakeFiles/imgui.dir/backends/imgui_impl_glfw.cpp.o: CXX_COMPILER__imgui_ E$:/git_projects/PlaceholderEngineWGPU/imgui/backends/imgui_impl_glfw.cpp || cmake_object_order_depends_target_imgui
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = imgui\CMakeFiles\imgui.dir\backends\imgui_impl_glfw.cpp.o.d
  FLAGS = -std=gnu++11
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  OBJECT_FILE_DIR = imgui\CMakeFiles\imgui.dir\backends

build imgui/CMakeFiles/imgui.dir/misc/cpp/imgui_stdlib.cpp.o: CXX_COMPILER__imgui_ E$:/git_projects/PlaceholderEngineWGPU/imgui/misc/cpp/imgui_stdlib.cpp || cmake_object_order_depends_target_imgui
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = imgui\CMakeFiles\imgui.dir\misc\cpp\imgui_stdlib.cpp.o.d
  FLAGS = -std=gnu++11
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  OBJECT_FILE_DIR = imgui\CMakeFiles\imgui.dir\misc\cpp

build imgui/CMakeFiles/imgui.dir/imgui.cpp.o: CXX_COMPILER__imgui_ E$:/git_projects/PlaceholderEngineWGPU/imgui/imgui.cpp || cmake_object_order_depends_target_imgui
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = imgui\CMakeFiles\imgui.dir\imgui.cpp.o.d
  FLAGS = -std=gnu++11
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  OBJECT_FILE_DIR = imgui\CMakeFiles\imgui.dir

build imgui/CMakeFiles/imgui.dir/imgui_draw.cpp.o: CXX_COMPILER__imgui_ E$:/git_projects/PlaceholderEngineWGPU/imgui/imgui_draw.cpp || cmake_object_order_depends_target_imgui
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = imgui\CMakeFiles\imgui.dir\imgui_draw.cpp.o.d
  FLAGS = -std=gnu++11
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  OBJECT_FILE_DIR = imgui\CMakeFiles\imgui.dir

build imgui/CMakeFiles/imgui.dir/imgui_tables.cpp.o: CXX_COMPILER__imgui_ E$:/git_projects/PlaceholderEngineWGPU/imgui/imgui_tables.cpp || cmake_object_order_depends_target_imgui
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = imgui\CMakeFiles\imgui.dir\imgui_tables.cpp.o.d
  FLAGS = -std=gnu++11
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  OBJECT_FILE_DIR = imgui\CMakeFiles\imgui.dir

build imgui/CMakeFiles/imgui.dir/imgui_widgets.cpp.o: CXX_COMPILER__imgui_ E$:/git_projects/PlaceholderEngineWGPU/imgui/imgui_widgets.cpp || cmake_object_order_depends_target_imgui
  DEFINES = -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = imgui\CMakeFiles\imgui.dir\imgui_widgets.cpp.o.d
  FLAGS = -std=gnu++11
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  OBJECT_FILE_DIR = imgui\CMakeFiles\imgui.dir


# =============================================================================
# Link build statements for STATIC_LIBRARY target imgui


#############################################
# Link the static library imgui\libimgui.a

build imgui/libimgui.a: CXX_STATIC_LIBRARY_LINKER__imgui_ imgui/CMakeFiles/imgui.dir/backends/imgui_impl_wgpu.cpp.o imgui/CMakeFiles/imgui.dir/backends/imgui_impl_glfw.cpp.o imgui/CMakeFiles/imgui.dir/misc/cpp/imgui_stdlib.cpp.o imgui/CMakeFiles/imgui.dir/imgui.cpp.o imgui/CMakeFiles/imgui.dir/imgui_draw.cpp.o imgui/CMakeFiles/imgui.dir/imgui_tables.cpp.o imgui/CMakeFiles/imgui.dir/imgui_widgets.cpp.o
  OBJECT_DIR = imgui\CMakeFiles\imgui.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = imgui\libimgui.a
  TARGET_PDB = imgui.a.dbg


#############################################
# Utility command for edit_cache

build imgui/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\imgui && "C:\Program Files\CMake\bin\cmake-gui.exe" -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build imgui/edit_cache: phony imgui/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build imgui/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\imgui && "C:\Program Files\CMake\bin\cmake.exe" --regenerate-during-build -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build imgui/rebuild_cache: phony imgui/CMakeFiles/rebuild_cache.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# E:/git_projects/PlaceholderEngineWGPU/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for edit_cache

build glm/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\glm && "C:\Program Files\CMake\bin\cmake-gui.exe" -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build glm/edit_cache: phony glm/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build glm/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\glm && "C:\Program Files\CMake\bin\cmake.exe" --regenerate-during-build -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build glm/rebuild_cache: phony glm/CMakeFiles/rebuild_cache.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# E:/git_projects/PlaceholderEngineWGPU/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target PlaceholderEngineWGPU


#############################################
# Order-only phony target for PlaceholderEngineWGPU

build cmake_object_order_depends_target_PlaceholderEngineWGPU: phony || cmake_object_order_depends_target_glfw3webgpu cmake_object_order_depends_target_imgui

build PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/PlaceholderEngineWGPU.cpp.o: CXX_COMPILER__PlaceholderEngineWGPU_ E$:/git_projects/PlaceholderEngineWGPU/PlaceholderEngineWGPU/PlaceholderEngineWGPU.cpp || cmake_object_order_depends_target_PlaceholderEngineWGPU
  DEFINES = -DRESOURCE_DIR=\"E:/git_projects/PlaceholderEngineWGPU/resources\" -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir\PlaceholderEngineWGPU.cpp.o.d
  FLAGS = -std=gnu++20
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten -IE:/git_projects/PlaceholderEngineWGPU/glfw3webgpu/. -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/glm/..
  OBJECT_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir
  OBJECT_FILE_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir

build PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/webgpu-utils.cpp.o: CXX_COMPILER__PlaceholderEngineWGPU_ E$:/git_projects/PlaceholderEngineWGPU/PlaceholderEngineWGPU/webgpu-utils.cpp || cmake_object_order_depends_target_PlaceholderEngineWGPU
  DEFINES = -DRESOURCE_DIR=\"E:/git_projects/PlaceholderEngineWGPU/resources\" -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir\webgpu-utils.cpp.o.d
  FLAGS = -std=gnu++20
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten -IE:/git_projects/PlaceholderEngineWGPU/glfw3webgpu/. -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/glm/..
  OBJECT_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir
  OBJECT_FILE_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir

build PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/Application.cpp.o: CXX_COMPILER__PlaceholderEngineWGPU_ E$:/git_projects/PlaceholderEngineWGPU/PlaceholderEngineWGPU/Application.cpp || cmake_object_order_depends_target_PlaceholderEngineWGPU
  DEFINES = -DRESOURCE_DIR=\"E:/git_projects/PlaceholderEngineWGPU/resources\" -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir\Application.cpp.o.d
  FLAGS = -std=gnu++20
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten -IE:/git_projects/PlaceholderEngineWGPU/glfw3webgpu/. -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/glm/..
  OBJECT_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir
  OBJECT_FILE_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir

build PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/ResourceManager.cpp.o: CXX_COMPILER__PlaceholderEngineWGPU_ E$:/git_projects/PlaceholderEngineWGPU/PlaceholderEngineWGPU/ResourceManager.cpp || cmake_object_order_depends_target_PlaceholderEngineWGPU
  DEFINES = -DRESOURCE_DIR=\"E:/git_projects/PlaceholderEngineWGPU/resources\" -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir\ResourceManager.cpp.o.d
  FLAGS = -std=gnu++20
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten -IE:/git_projects/PlaceholderEngineWGPU/glfw3webgpu/. -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/glm/..
  OBJECT_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir
  OBJECT_FILE_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir

build PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/implementations.cpp.o: CXX_COMPILER__PlaceholderEngineWGPU_ E$:/git_projects/PlaceholderEngineWGPU/PlaceholderEngineWGPU/implementations.cpp || cmake_object_order_depends_target_PlaceholderEngineWGPU
  DEFINES = -DRESOURCE_DIR=\"E:/git_projects/PlaceholderEngineWGPU/resources\" -DWEBGPU_BACKEND_EMSCRIPTEN
  DEP_FILE = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir\implementations.cpp.o.d
  FLAGS = -std=gnu++20
  INCLUDES = -IE:/git_projects/PlaceholderEngineWGPU/webgpu/include-emscripten -IE:/git_projects/PlaceholderEngineWGPU/glfw3webgpu/. -IE:/git_projects/PlaceholderEngineWGPU/imgui/. -IE:/git_projects/PlaceholderEngineWGPU/glm/..
  OBJECT_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir
  OBJECT_FILE_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir


# =============================================================================
# Link build statements for EXECUTABLE target PlaceholderEngineWGPU


#############################################
# Link the executable PlaceholderEngineWGPU\PlaceholderEngineWGPU.html

build PlaceholderEngineWGPU/PlaceholderEngineWGPU.html: CXX_EXECUTABLE_LINKER__PlaceholderEngineWGPU_ PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/PlaceholderEngineWGPU.cpp.o PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/webgpu-utils.cpp.o PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/Application.cpp.o PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/ResourceManager.cpp.o PlaceholderEngineWGPU/CMakeFiles/PlaceholderEngineWGPU.dir/implementations.cpp.o | glfw3webgpu/libglfw3webgpu.a imgui/libimgui.a || glfw3webgpu/libglfw3webgpu.a imgui/libimgui.a
  LINK_FLAGS = -sALLOW_MEMORY_GROWTH --preload-file E:/git_projects/PlaceholderEngineWGPU/resources -sUSE_GLFW=3 -sUSE_WEBGPU -sASYNCIFY
  LINK_LIBRARIES = glfw3webgpu/libglfw3webgpu.a  imgui/libimgui.a
  OBJECT_DIR = PlaceholderEngineWGPU\CMakeFiles\PlaceholderEngineWGPU.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = PlaceholderEngineWGPU\PlaceholderEngineWGPU.html
  TARGET_PDB = PlaceholderEngineWGPU.html.dbg


#############################################
# Utility command for edit_cache

build PlaceholderEngineWGPU/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\PlaceholderEngineWGPU && "C:\Program Files\CMake\bin\cmake-gui.exe" -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build PlaceholderEngineWGPU/edit_cache: phony PlaceholderEngineWGPU/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build PlaceholderEngineWGPU/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D E:\git_projects\PlaceholderEngineWGPU\build-web\PlaceholderEngineWGPU && "C:\Program Files\CMake\bin\cmake.exe" --regenerate-during-build -SE:\git_projects\PlaceholderEngineWGPU -BE:\git_projects\PlaceholderEngineWGPU\build-web"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build PlaceholderEngineWGPU/rebuild_cache: phony PlaceholderEngineWGPU/CMakeFiles/rebuild_cache.util

# =============================================================================
# Target aliases.

build PlaceholderEngineWGPU: phony PlaceholderEngineWGPU/PlaceholderEngineWGPU.html

build PlaceholderEngineWGPU.html: phony PlaceholderEngineWGPU/PlaceholderEngineWGPU.html

build glfw3webgpu: phony glfw3webgpu/libglfw3webgpu.a

build imgui: phony imgui/libimgui.a

build libglfw3webgpu.a: phony glfw3webgpu/libglfw3webgpu.a

build libimgui.a: phony imgui/libimgui.a

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: E:/git_projects/PlaceholderEngineWGPU/build-web

build all: phony webgpu/all glfw3webgpu/all imgui/all glm/all PlaceholderEngineWGPU/all

# =============================================================================

#############################################
# Folder: E:/git_projects/PlaceholderEngineWGPU/build-web/PlaceholderEngineWGPU

build PlaceholderEngineWGPU/all: phony PlaceholderEngineWGPU/PlaceholderEngineWGPU.html

# =============================================================================

#############################################
# Folder: E:/git_projects/PlaceholderEngineWGPU/build-web/glfw3webgpu

build glfw3webgpu/all: phony glfw3webgpu/libglfw3webgpu.a

# =============================================================================

#############################################
# Folder: E:/git_projects/PlaceholderEngineWGPU/build-web/glm

build glm/all: phony

# =============================================================================

#############################################
# Folder: E:/git_projects/PlaceholderEngineWGPU/build-web/imgui

build imgui/all: phony imgui/libimgui.a

# =============================================================================

#############################################
# Folder: E:/git_projects/PlaceholderEngineWGPU/build-web/webgpu

build webgpu/all: phony

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | ../CMakeLists.txt ../PlaceholderEngineWGPU/CMakeLists.txt ../glfw3webgpu/CMakeLists.txt ../glm/CMakeLists.txt ../imgui/CMakeLists.txt ../webgpu/CMakeLists.txt C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeCInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeCXXInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/Clang-C.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/Clang-CXX.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/Clang.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/GNU.cmake CMakeCache.txt CMakeFiles/3.23.1/CMakeCCompiler.cmake CMakeFiles/3.23.1/CMakeCXXCompiler.cmake CMakeFiles/3.23.1/CMakeSystem.cmake E$:/git_projects/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build ../CMakeLists.txt ../PlaceholderEngineWGPU/CMakeLists.txt ../glfw3webgpu/CMakeLists.txt ../glm/CMakeLists.txt ../imgui/CMakeLists.txt ../webgpu/CMakeLists.txt C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeCInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeCXXInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeCommonLanguageInclude.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeGenericSystem.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeInitializeConfigs.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeLanguageInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeSystemSpecificInformation.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/CMakeSystemSpecificInitialize.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/Clang-C.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/Clang-CXX.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/Clang.cmake C$:/Program$ Files/CMake/share/cmake-3.23/Modules/Compiler/GNU.cmake CMakeCache.txt CMakeFiles/3.23.1/CMakeCCompiler.cmake CMakeFiles/3.23.1/CMakeCXXCompiler.cmake CMakeFiles/3.23.1/CMakeSystem.cmake E$:/git_projects/emsdk/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
